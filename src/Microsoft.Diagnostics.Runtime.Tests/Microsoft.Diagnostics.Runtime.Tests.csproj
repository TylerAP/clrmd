<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netcoreapp2.1</TargetFramework>
        <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)\..\..\eng\Microsoft.Diagnostics.Runtime.snk</AssemblyOriginatorKeyFile>
        <IsPackable>false</IsPackable>
        <BuildInParallel>false</BuildInParallel>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="FluentAssertions" Version="5.5.3" />
        <PackageReference Include="JetBrains.Annotations" Version="2018.2.1" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.9.0" />
        <PackageReference Include="xunit" Version="2.4.0" />
        <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
    </ItemGroup>

    <ItemGroup>
        <None Include="../TestTargets/*.cs">
      <Link>data\%(RecursiveDir)%(Filename)%(Extension)</Link>
        </None>
        <None Include="../TestTargets/Shared/*.cs">
            <Link>data\Shared\%(RecursiveDir)%(Filename)%(Extension)</Link>
        </None>
        <None Include="../TestTargets/TestTargets.csproj">
            <Link>data\%(RecursiveDir)%(Filename)%(Extension)</Link>
        </None>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Microsoft.Diagnostics.Runtime.Native\Microsoft.Diagnostics.Runtime.Native.csproj" />
        <ProjectReference Include="..\Microsoft.Diagnostics.Runtime\Microsoft.Diagnostics.Runtime.csproj" />
    </ItemGroup>

    <Target Name="StartCreateTestTargets" BeforeTargets="Build">
        <Message Text="Creating Test Targets..." />

        <ItemGroup>
            <TestTargetSharedLibrarySource Include="../TestTargets/Shared/SharedLibrary.cs" />
        </ItemGroup>
        <PropertyGroup>

            <__TestTargetBaseDirectory>%(TestTargetSharedLibrarySource.RootDir)%(TestTargetSharedLibrarySource.Directory)../</__TestTargetBaseDirectory>
            <_TestTargetBaseDirectory>$(__TestTargetBaseDirectory.Replace('\','/'))</_TestTargetBaseDirectory>
            <TestTargetBaseDirectory>$(_TestTargetBaseDirectory.Replace('/Shared/../','/'))</TestTargetBaseDirectory>
            <TestTargetBinDirectory>$(TestTargetBaseDirectory)bin/</TestTargetBinDirectory>
            <TestTargetBin32Directory>$(TestTargetBinDirectory)x86/</TestTargetBin32Directory>
            <TestTargetBin64Directory>$(TestTargetBinDirectory)x64/</TestTargetBin64Directory>
            <TestTargetBinILDirectory>$(TestTargetBinDirectory)AnyCPU/</TestTargetBinILDirectory>

        </PropertyGroup>

        <MakeDir Directories="$(TestTargetBin32Directory);$(TestTargetBin64Directory);$(TestTargetBinILDirectory)" />

        <MSBuild Projects="$(TestTargetBaseDirectory)/TestTargets.csproj" Targets="Restore;Build" RunEachTargetSeparately="false" Properties="Platform=AnyCPU;Configuration=Release;OutputType=library;SourceFile=Shared/SharedLibrary.cs" BuildInParallel="false" ContinueOnError="false" />
    </Target>
    <Target Name="CreateTestTargets" AfterTargets="StartCreateTestTargets" BeforeTargets="Build" DependsOnTargets="StartCreateTestTargets">
        <Copy Condition="!Exists('$(TestTargetBin32Directory)%(TestTargetSharedLibrarySource.Filename).dll')" SourceFiles="$(TestTargetBinILDirectory)%(TestTargetSharedLibrarySource.Filename).dll" UseHardlinksIfPossible="true" DestinationFolder="$(TestTargetBin32Directory)" />
        <Copy Condition="!Exists('$(TestTargetBin32Directory)%(TestTargetSharedLibrarySource.Filename).pdb')" SourceFiles="$(TestTargetBinILDirectory)%(TestTargetSharedLibrarySource.Filename).pdb" UseHardlinksIfPossible="true" DestinationFolder="$(TestTargetBin32Directory)" />
        <Copy Condition="!Exists('$(TestTargetBin64Directory)%(TestTargetSharedLibrarySource.Filename).dll')" SourceFiles="$(TestTargetBinILDirectory)%(TestTargetSharedLibrarySource.Filename).dll" UseHardlinksIfPossible="true" DestinationFolder="$(TestTargetBin64Directory)" />
        <Copy Condition="!Exists('$(TestTargetBin64Directory)%(TestTargetSharedLibrarySource.Filename).pdb')" SourceFiles="$(TestTargetBinILDirectory)%(TestTargetSharedLibrarySource.Filename).pdb" UseHardlinksIfPossible="true" DestinationFolder="$(TestTargetBin64Directory)" />
        <Error Condition="!Exists('$(TestTargetBin32Directory)%(TestTargetSharedLibrarySource.Filename).dll')" Text="TestTargets SharedLibrary is not in bin/x86." />
        <Error Condition="!Exists('$(TestTargetBin64Directory)%(TestTargetSharedLibrarySource.Filename).dll')" Text="TestTargets SharedLibrary is not in bin/x64." />
        <ItemGroup>
            <TestTargetSources Include="../TestTargets/*.cs" />
        </ItemGroup>

        <MSBuild
            Condition="!Exists('$(TestTargetBin32Directory)%(TestTargetSources.Filename).dll') AND '$(OS)'=='Windows_NT'"
            Targets="Restore;Build"
            RunEachTargetSeparately="false"
            Projects="$(TestTargetBaseDirectory)/TestTargets.csproj"
            BuildInParallel="false"
            ContinueOnError="false"
            Properties="Platform=x86;Configuration=Release;OutputType=exe;SourceFile=%(TestTargetSources.Identity)" />

        <MSBuild
            Condition="!Exists('$(TestTargetBin64Directory)%(TestTargetSources.Filename).dll')"
            Targets="Restore;Build"
            RunEachTargetSeparately="false"
            Projects="$(TestTargetBaseDirectory)/TestTargets.csproj"
            BuildInParallel="false"
            ContinueOnError="false"
            Properties="Platform=x64;Configuration=Release;OutputType=exe;SourceFile=%(TestTargetSources.Identity)" />
    </Target>

    <Target Name="CreateTestTargetDumps" AfterTargets="CreateTestTargets" BeforeTargets="Build" DependsOnTargets="CreateTestTargets">
        <MSBuild
            Condition="'$(OS)'=='Windows_NT'"
            Targets="CreateTestTargetsDumps"
            RunEachTargetSeparately="false"
            Projects="$(TestTargetBaseDirectory)/TestTargets.csproj"
            BuildInParallel="false"
            ContinueOnError="false"
            Properties="Platform=x86;Configuration=Release;OutputType=exe;SourceFile=%(TestTargetSources.Identity)" />
        <MSBuild
            Targets="CreateTestTargetsDumps"
            RunEachTargetSeparately="false"
            Projects="$(TestTargetBaseDirectory)/TestTargets.csproj"
            BuildInParallel="false"
            ContinueOnError="false"
            Properties="Platform=x64;Configuration=Release;OutputType=exe;SourceFile=%(TestTargetSources.Identity)" />
    </Target>

</Project>
